server {
    listen       80;
    listen       [::]:80;
    server_name  _;

    root /usr/share/nginx/html;
    index index.html;

    # Proxy API requests to backend ALB
    location /api/ {
        proxy_pass http://backend-alb-948465488.us-west-2.elb.amazonaws.com;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_cache_bypass $http_upgrade;
        
        # Hide backend URL from responses
        proxy_redirect http:// https://;
        proxy_redirect ~^http://backend-alb[^/]+ https://$host;
        
        # CORS headers (in case backend doesn't set them)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Content-Type' 'text/plain';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Serve static assets with proper MIME types
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|json)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle client-side routing (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    location = /health {
        return 200 "OK";
        add_header Content-Type text/plain;
    }
}
