name: Deploy Services

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment (e.g., dev, prod)"
        required: true
        default: "dev"

env:
  AWS_REGION: us-west-2
  CLUSTER_NAME: hems-ecs-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      - name: Build & Push Grid Event Gateway
        run: ./grid-event-gateway/build_and_push.sh

      - name: Build & Push VEN Simulator  
        run: ./volttron-ven/build_and_push.sh

      - name: Build & Push ECS Backend
        run: ./ecs-backend/build_and_push.sh

      - name: Build & Push ECS Frontend
        run: ./ecs-frontend/build_and_push.sh

      - name: Force ECS Service Redeploy
        run: |
          for svc in ecs-backend ecs-frontend grid-event-gateway volttron-ven; do
            echo "Redeploying $svc..."
            aws ecs update-service \
              --cluster $CLUSTER_NAME \
              --service "$svc" \
              --force-new-deployment \
              --region $AWS_REGION || echo "Service $svc not found, skipping"
          done

      - name: Verify ECS Services are Healthy
        run: |
          for svc in ecs-backend ecs-frontend grid-event-gateway volttron-ven; do
            if aws ecs describe-services --cluster $CLUSTER_NAME --services "$svc" --region $AWS_REGION >/dev/null 2>&1; then
              echo "Checking service: $svc"
              aws ecs wait services-stable \
                --cluster $CLUSTER_NAME \
                --services "$svc" \
                --region $AWS_REGION \
                --waiter-config '{"delay": 15, "maxAttempts": 40}' || echo "Warning: $svc deployment timeout"
              echo "$svc deployment completed âœ…"
            else
              echo "Service $svc not found, skipping health check"
            fi
          done

      - name: Print Deployment Summary
        run: |
          echo "### ðŸš€ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Cluster:** $CLUSTER_NAME" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** $AWS_REGION" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Services Deployed:**" >> $GITHUB_STEP_SUMMARY
          for svc in ecs-backend ecs-frontend grid-event-gateway volttron-ven; do
            echo "- âœ… $svc" >> $GITHUB_STEP_SUMMARY
          done